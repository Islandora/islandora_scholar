<?php

/**
 * @file
 * A collection of functions for batch processing files.
 *
 * Used to generate the appropriate file for exporting.
 */

require_once dirname(__FILE__) . '/batch.export.ris.inc';
require_once dirname(__FILE__) . '/batch.export.rtf.inc';
require_once dirname(__FILE__) . '/batch.export.pdf.inc';

/**
 * Exports a collection of citations to a file.
 *
 * Launches a Batch process from a submit callback.
 * Otherwise the callee must also call batch_process().
 *
 * @param array $pids
 *   The collection of citations to export to file.
 * @param string $style
 *   The style to apply to the citation for exporting to a file.
 * @param string $file_format
 *   The format of the exported file.
 */
function citation_exporter_batch_export(array $pids, $style = NULL, $file_format = NULL) {
  $operations = array();
  switch ($file_format) {
    case 'RIS':
      $operations = citation_exporter_batch_get_ris_operations($pids);
      break;

    case 'RTF':
      $operations = citation_exporter_batch_get_rtf_operations($pids, $style);
      break;

    case 'PDF':
      $operations = citation_exporter_batch_get_pdf_operations($pids, $style);
      break;
  }

  if (count($operations) > 0) {
    $batch = array(
      'title' => t('Exporting Citations to File'),
      'operations' => $operations,
      'init_message' => 'Preparing to Export Citations',
      'progress_message' => 'Exporting Citations',
      'finished' => 'citation_exporter_batch_finished',
    );
    batch_set($batch);
  }
}

/**
 * Store the given pids in the given file.
 */
function citation_exporter_batch_store_pids_in_file($filename, array $pids) {
  $handle = fopen($filename, 'wb');
  foreach ($pids as $pid) {
    fwrite($handle, trim($pid) . "\n");
  }
  fclose($handle);
}

/**
 * Fetch the stored PIDS from the given file.
 */
function citation_exporter_batch_get_pids_from_file($filename) {
  $file = fopen($filename, 'rb');
  $pids = array();
  while (($pid = fgets($file)) !== FALSE) {
    $pids[] = trim($pid);
  }
  fclose($file);
  return $pids;
}

/**
 * Get a number of PIDS from the given file.
 */
function citation_exporter_batch_get_num_pids_from_file($filename, $num = 1) {
  $remaining = 0;
  $ret = array();
  $pids = citation_exporter_batch_get_pids_from_file($filename);
  if ($pids) {
    // Trim selected number of PIDs, to return.
    $ret = array_map('trim', array_slice($pids, 0, $num));

    // Save the remaining PIDs back to the file.
    $pids_remaining = array_slice($pids, $num);
    citation_exporter_batch_store_pids_in_file($filename, $pids_remaining);

    // Get the count of remaining PIDs to return.
    $remaining = count($pids_remaining);
  }
  return array($ret, $remaining);
}

/**
 * Redirects the batch back to the old URL when complete.
 *
 * Also deletes the file list.
 */
function citation_exporter_batch_redirect($redirect, array $file_to_unlink, array &$context) {
  foreach ($file_to_unlink as $file) {
    drupal_unlink($file);
  }
  $context['results']['redirect'] = $redirect;
}

/**
 * Prepare the file generated by the batch process to be downloaded.
 *
 * @param bool $successful
 *   Was the batch process succesful?
 * @param array $results
 *   The results returned from the batch process.
 * @param array $operations
 *   The operations that were part of the batch process.
 */
function citation_exporter_batch_finished($successful, array $results, array $operations) {
  module_load_include('inc', 'citation_exporter', 'includes/citation.export');
  if ($successful) {
    CitationExporter::PrepareToExport($results['filename'], $results['mime_type'], $results['download_filename'], $results['redirect']);
  }
}

/**
 * Trigger the batch export of the given $pids to RIS.
 */
function citation_exporter_batch_export_ris(array $pids) {
  citation_exporter_batch_export($pids, NULL, 'RIS');
}

/**
 * Trigger the batch export of the given $pids to RTF.
 */
function citation_exporter_batch_export_rtf(array $pids, $style) {
  citation_exporter_batch_export($pids, $style, 'RTF');
}

/**
 * Trigger the batch export of the given $pids to PDF.
 */
function citation_exporter_batch_export_pdf(array $pids, $style) {
  citation_exporter_batch_export($pids, $style, 'PDF');
}
